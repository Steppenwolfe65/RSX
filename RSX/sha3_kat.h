#ifndef SHA3_KAT_H
#define SHA3_KAT_H

#include "common.h"

/**
* \file sha3_kat.h
* \brief <b>SHA3 Known Answer Tests</b> \n
* Uses Known Answer Tests from official sources to verify the
* correct operation of SHA3 digest and SHAKE implementations.
* \author John Underhill
* \date December 28, 2017
*/

/**
* \brief Tests the 256 bit version of the keccak message digest for correct operation,
* using selected vectors from the NIST Fips202 and alternative references.
*
* \return Returns true for success
*
* \remarks <b>Test References:</b> \n
* Fips202: <a href="http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf">SHA3-Standard</a> \n
* KAT: <a href="https://csrc.nist.gov/CSRC/media/Projects/Cryptographic-Standards-and-Guidelines/documents/examples/SHA3-256_Msg0.pdf">SHA256(0)</a> \n
* KAT: <a href="https://csrc.nist.gov/CSRC/media/Projects/Cryptographic-Standards-and-Guidelines/documents/examples/SHA3-256_1600.pdf">SHA256(1600)</a> \n
* KAT: <a href="https://www.di-mgt.com.au/sha_testvectors.html">SHA256(24, 448)</a>
*/
bool sha3_256_kat_test();

/**
* \brief Tests the 512 bit version of the keccak message digest for correct operation,
* using selected vectors from NIST Fips202 and alternative references.
*
* \return Returns true for success
*
* \remarks <b>Test References:</b> \n
* Fips202: <a href="http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf">SHA3-Standard</a> \n
* KAT: <a href="https://csrc.nist.gov/CSRC/media/Projects/Cryptographic-Standards-and-Guidelines/documents/examples/SHA3-512_Msg0.pdf">SHA512(0)</a> \n
* KAT: <a href="https://csrc.nist.gov/CSRC/media/Projects/Cryptographic-Standards-and-Guidelines/documents/examples/SHA3-512_1600.pdf">SHA512(1600)</a> \n
* KAT: <a href="https://www.di-mgt.com.au/sha_testvectors.html">SHA512(24, 448)</a>
*/
bool sha3_512_kat_test();

/**
* \brief Tests the 128 bit version of the SHAKE XOF function for correct operation,
* using selected vectors from the NIST reference package.
*
* \return Returns true for success
*
* \remarks <b>Test References:</b> \n
* SP800-185: <a href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-185.pdf">SHA-3 Derived Functions</a> \n
* KAT: <a href="https://csrc.nist.gov/CSRC/media/Projects/Cryptographic-Standards-and-Guidelines/documents/examples/SHAKE128_Msg0.pdf">SHAKE128(0)</a> \n
* KAT: <a href="https://csrc.nist.gov/CSRC/media/Projects/Cryptographic-Standards-and-Guidelines/documents/examples/SHAKE128_Msg1600.pdf">SHAKE128(1600)</a>
*/
bool shake_128_kat_test();

/**
* \brief Tests the 256 bit version of the SHAKE XOF function for correct operation,
* using selected vectors from the NIST reference package.
*
* \return Returns true for success
*
* \remarks <b>Test References:</b> \n
* SP800-185: <a href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-185.pdf">SHA-3 Derived Functions</a> \n
* KAT: <a href="https://csrc.nist.gov/CSRC/media/Projects/Cryptographic-Standards-and-Guidelines/documents/examples/SHAKE256_Msg0.pdf">SHAKE256(0)</a> \n
* KAT: <a href="https://csrc.nist.gov/CSRC/media/Projects/Cryptographic-Standards-and-Guidelines/documents/examples/SHAKE256_Msg1600.pdf">SHAKE256(1600)</a>
*/
bool shake_256_kat_test();

/**
* \brief Tests the 128 bit version of the cSHAKE function for correct operation,
* using the NIST vectors.
*
* \return Returns true for success
*
* \remarks <b>References:</b> \n
* NIST: <a href="https://csrc.nist.gov/CSRC/media/Projects/Cryptographic-Standards-and-Guidelines/documents/examples/cSHAKE_samples.pdf">cSHAKE example values</a> \n
* SP800-185: <a href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-185.pdf">SHA-3 Derived Functions</a>
*/
bool cshake_128_kat_test();

/**
* \brief Tests the 256 bit version of the cSHAKE function for correct operation,
* using the NIST vectors.
*
* \return Returns true for success
*
* \remarks <b>References:</b> \n
* NIST: <a href="https://csrc.nist.gov/CSRC/media/Projects/Cryptographic-Standards-and-Guidelines/documents/examples/cSHAKE_samples.pdf">cSHAKE example values</a> \n
* SP800-185: <a href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-185.pdf">SHA-3 Derived Functions</a>
*/
bool cshake_256_kat_test();

/**
* \brief Tests the 128 bit version of the simple cSHAKE function for correct operation,
* using vectors generated by a verified implementation.
*
* \return Returns true for success
*
* \remarks <b>References:</b> \n
* Microsoft PQCrypto: <a href="https://github.com/Microsoft/PQCrypto-LWEKE/blob/master/src/sha3/fips202.c">fips202.c</a> \n
* SP800-185: <a href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-185.pdf">SHA-3 Derived Functions</a>
*/
bool cshake_simple_128_kat_test();

/**
* \brief Tests the 256 bit version of the simple cSHAKE function for correct operation,
* using vectors generated by a verified implementation.
*
* \return Returns true for success
*
* \remarks <b>References:</b> \n
* Microsoft PQCrypto: <a href="https://github.com/Microsoft/PQCrypto-LWEKE/blob/master/src/sha3/fips202.c">fips202.c</a> \n
* SP800-185: <a href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-185.pdf">SHA-3 Derived Functions</a>
*/
bool cshake_simple_256_kat_test();

/**
* \brief Tests the 128 bit version of the KMAC function for correct operation,
* using selected vectors from the NIST reference package.
*
* \return Returns true for success
*
* \remarks <b>Test References:</b> \n
* SP800-185: <a href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-185.pdf">SHA-3 Derived Functions</a> \n
* NIST: <a href="https://csrc.nist.gov/CSRC/media/Projects/Cryptographic-Standards-and-Guidelines/documents/examples/KMAC_samples.pdf">KMAC example values</a>
*/
bool kmac_128_kat_test();

/**
* \brief Tests the 256 bit version of the KMAC function for correct operation,
* using selected vectors from the NIST reference package.
*
* \return Returns true for success
*
* \remarks <b>Test References:</b> \n
* SP800-185: <a href="http://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-185.pdf">SHA-3 Derived Functions</a> \n
* NIST: <a href="https://csrc.nist.gov/CSRC/media/Projects/Cryptographic-Standards-and-Guidelines/documents/examples/KMAC_samples.pdf">KMAC example values</a>
*/
bool kmac_256_kat_test();

#endif
